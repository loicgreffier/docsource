name: Push Main

on:
  push:
    branches:
      - 'main'

jobs:
  build-jar:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Check style
        run: mvn checkstyle:check

      - name: Build and test
        run: mvn clean package

      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: docsource-jar
          path: target/docsource.jar

      - name: Docker
        run: mvn clean package -DskipTests jib:build -Djib.to.auth.username=$DOCKER_USER -Djib.to.auth.password=$DOCKER_TOKEN
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}

  build-native:
    name: Build Native Image ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        include:
          - os: 'ubuntu-latest'
            platform: 'linux-amd64'
            extension: ''
          - os: 'macos-latest'
            platform: 'darwin-arm64'
            extension: ''
          - os: 'windows-latest'
            platform: 'windows-amd64'
            extension: '.exe'
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21.0.1'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check style
        run: mvn checkstyle:check

      - name: Build and test
        run: mvn clean package -Pnative -PnativeTest

      - name: Publish native test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/target/native-test-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: docsource-${{ matrix.platform }}
          path: target/docsource${{ matrix.extension }}

      - name: Docker
        if: matrix.os == 'ubuntu-latest'
        run: mvn clean package -DskipTests -Pnative jib:build -Djib.to.auth.username=$DOCKER_USER -Djib.to.auth.password=$DOCKER_TOKEN
        env:
          DOCKER_USER: ${{ secrets.DOCKER_USER }}
          DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}