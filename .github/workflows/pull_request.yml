name: Pull request

on:
  pull_request:
    branches: [ main ]

jobs:
  build-jar:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Check Style
        run: mvn checkstyle:check

      - name: Build & Test
        run: mvn clean package

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: docsource-jar
          path: target/docsource.jar

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '17.0.8'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Style
        run: mvn checkstyle:check

      - name: Build & Test
        run: mvn clean package -Pnative -PnativeTest

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/target/native-test-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: docsource-linux
          path: target/docsource

  build-windows:
    runs-on: windows-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '17.0.8'
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Check Style
        run: mvn checkstyle:check
        
      - name: Build & Test
        run: mvn clean package -Pnative -PnativeTest

      - name: Publish Test Report
        if: always()
        uses: mikepenz/action-junit-report@v4
        with:
          report_paths: '**/target/native-test-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v3
        with:
          name: docsource-windows
          path: target/docsource.exe