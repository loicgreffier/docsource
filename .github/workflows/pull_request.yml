name: Pull Request

on:
  pull_request:
    branches:
      - 'main'
      - 'hotfix/v*.*.*'

jobs:
  build-jar:
    name: Build JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Lint
        run: mvn spotless:check

      - name: Build
        run: mvn clean package

      - name: Publish test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/target/surefire-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: docsource-jar
          path: target/docsource.jar

      - name: Sonar
        if: github.event.pull_request.head.repo.fork == false
        run: mvn verify sonar:sonar
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Metadata
        id: metadata
        run: echo current_version=$(echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)) >> $GITHUB_OUTPUT

      - name: Docker build
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .docker/jar.Dockerfile
          tags: loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}-jar

      - name: Scan image
        id: scan
        uses: anchore/scan-action@v6
        with:
          image: loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}-jar
          fail-build: true
          severity-cutoff: high
          only-fixed: true

      - name: Upload Grype scan
        if: ${{ steps.scan.conclusion == 'success' || steps.scan.conclusion == 'failure' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  build-native:
    name: Build Native Image ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        include:
          - os: 'ubuntu-latest'
            platform: 'linux-amd64'
            extension: ''
            native-profile: 'native-static-musl'
          - os: 'macos-latest'
            platform: 'darwin-arm64'
            extension: ''
            native-profile: 'native'
          - os: 'windows-latest'
            platform: 'windows-amd64'
            extension: '.exe'
            native-profile: 'native'
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21'
          native-image-musl: ${{ matrix.os == 'ubuntu-latest' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Lint
        run: mvn spotless:check

      - name: Build
        run: mvn clean package -P${{ matrix.native-profile }} -PnativeTest

      - name: Publish native test report
        if: always()
        uses: mikepenz/action-junit-report@v5
        with:
          report_paths: '**/target/native-test-reports/TEST-*.xml'

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: docsource-${{ matrix.platform }}
          path: target/docsource${{ matrix.extension }}

      - name: Metadata
        id: metadata
        run: echo current_version=$(echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)) >> $GITHUB_OUTPUT
        shell: bash

      - name: Docker build
        if: matrix.os == 'ubuntu-latest'
        id: docker
        uses: docker/build-push-action@v6
        with:
          context: .
          file: .docker/Dockerfile
          tags: loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}

      - name: Scan image
        if: ${{ steps.docker.conclusion == 'success' }}
        id: scan
        uses: anchore/scan-action@v6
        with:
          image: loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}
          fail-build: true
          severity-cutoff: high
          only-fixed: true

      - name: Upload Grype scan
        if: ${{ steps.scan.conclusion == 'success' || steps.scan.conclusion == 'failure' }}
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}