name: Security

on:
  schedule:
    - cron: '05 23 * * 3'

jobs:
  scan-jar:
    name: Scan JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Metadata
        id: metadata
        run: echo current_version=$(echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)) >> $GITHUB_OUTPUT

      - name: Docker build
        run: docker build . -f .docker/jar.Dockerfile -t loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}-jar

      - name: Scan image
        id: scan
        uses: anchore/scan-action@v6
        with:
          image: loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}-jar
          fail-build: true
          severity-cutoff: high
          only-fixed: true

      - name: Upload Grype scan
        if: steps.scan.conclusion == 'success' || steps.scan.conclusion == 'failure'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

  scan-native:
    name: Scan Native Image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Metadata
        id: metadata
        run: echo current_version=$(echo $(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)) >> $GITHUB_OUTPUT
        shell: bash

      - name: Docker build
        run: docker build . -f .docker/Dockerfile -t loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}

      - name: Scan image
        id: scan
        uses: anchore/scan-action@v6
        with:
          image: loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}
          fail-build: true
          severity-cutoff: high
          only-fixed: true

      - name: Upload Grype scan
        if: steps.scan.conclusion == 'success' || steps.scan.conclusion == 'failure'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}