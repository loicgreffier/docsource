name: Release

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  release-jar:
    name: Release JAR
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: 21
          distribution: temurin
          cache: maven

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: mvn clean package -DskipTests

      - name: Metadata
        id: metadata
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          LATEST_VERSION=$(git tag -l --sort=-version:refname | head -1 | cut -d 'v' -f 2)
          echo current_version=$(echo $CURRENT_VERSION) >> $GITHUB_OUTPUT
          echo is_latest_version=$(echo $(test "$LATEST_VERSION" == "$CURRENT_VERSION" && echo true || echo false)) >> $GITHUB_OUTPUT

      - name: Docker login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker
        run: |
          docker build -f .docker/jar.Dockerfile -t loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}-jar .
          if [ "${{ steps.metadata.outputs.is_latest_version }}" == "true" ]; then
            docker tag loicgreffier/docsource:${{ steps.metadata.outputs.current_version }}-jar loicgreffier/docsource:latest-jar
          fi
          docker push loicgreffier/docsource --all-tags

      - name: Generate release changelog
        uses: mikepenz/release-changelog-builder-action@v5
        id: build_changelog
        with:
          configuration: 'changelog-builder.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          artifacts: ${{ github.workspace }}/target/docsource.jar
          draft: true
          prerelease: true
          allowUpdates: true

  release-native:
    name: Release Native Image ${{ matrix.platform }}
    runs-on: ${{matrix.os}}
    strategy:
      matrix:
        os: [ 'ubuntu-latest', 'windows-latest', 'macos-latest' ]
        include:
          - os: 'ubuntu-latest'
            platform: 'linux-amd64'
            extension: ''
          - os: 'macos-latest'
            platform: 'darwin-arm64'
            extension: ''
          - os: 'windows-latest'
            platform: 'windows-amd64'
            extension: '.exe'
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up GraalVM
        uses: graalvm/setup-graalvm@v1
        with:
          distribution: 'graalvm'
          java-version: '21.0.1'
          native-image-musl: ${{ matrix.os == 'ubuntu-latest' }}
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build
        run: mvn clean package -DskipTests -Pnative ${{ matrix.os == 'ubuntu-latest' && '-Pnative-static-musl' || '' }}

      - name: Metadata
        if: matrix.os == 'ubuntu-latest'
        id: metadata
        run: |
          CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
          LATEST_VERSION=$(git tag -l --sort=-version:refname | head -1 | cut -d 'v' -f 2)
          echo current_version=$(echo $CURRENT_VERSION) >> $GITHUB_OUTPUT
          echo is_latest_version=$(echo $(test "$LATEST_VERSION" == "$CURRENT_VERSION" && echo true || echo false)) >> $GITHUB_OUTPUT

      - name: Docker login
        if: matrix.os == 'ubuntu-latest'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USER }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Docker
        if: matrix.os == 'ubuntu-latest'
        run: |
          docker build -f .docker/Dockerfile -t loicgreffier/docsource:${{ steps.metadata.outputs.current_version }} .
          if [ "${{ steps.metadata.outputs.is_latest_version }}" == "true" ]; then
              docker tag loicgreffier/docsource:${{ steps.metadata.outputs.current_version }} loicgreffier/docsource:latest
          fi
          docker push loicgreffier/docsource --all-tags

      - name: Generate release changelog
        uses: mikepenz/release-changelog-builder-action@v5
        id: build_changelog
        with:
          configuration: 'changelog-builder.json'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Rename file
        run: mv target/docsource${{ matrix.extension }} target/docsource-${{ matrix.platform }}${{ matrix.extension }}

      - name: Update release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          body: ${{ steps.build_changelog.outputs.changelog }}
          artifacts: target/docsource-${{ matrix.platform }}${{ matrix.extension }}
          draft: true
          prerelease: true
          allowUpdates: true